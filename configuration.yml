{
    'BATCH_SIZE': 8, # Batch size
    'LEARNING_RATE': 0.02, # Initial Learning Rate
    'ITERATION_START': 0,  # Initial iteration number
    'ITERATION_COUNT': 20,  # Number of iterations of each model
    'EPOCHS': 50,  # Number of epochs, in practice the number of checkpoints
    'STEPS_PER_EPOCH': 1000,  # Number of training steps before each checkpoint
    'EPOCHS_TO_REDUCE_LR': 15,  # Number of epochs after which the LR will be divided by 'LR DIVISOR'
    'LR_DIVISOR': 2.,  # The number the learning rate will be divided by after 'EPOCHS_TO_REDUCE_LR'
    'VALIDATION_STEPS': 1,  # Validate through the data only once
    'TRAIN_MODEL': True,  # Train the model or load an existing file
    'PRINT_OUTPUT_IMAGES': True,  # Print the output images while the network is being trained
    'FIT_VERBOSITY': 2,  # Verbosity of the Keras fit_generator function
    'BATCH_GENERATION_MODE': 'sequential',  # The batch generation mode
    'TRAINING_PATH': 'data/',  # The root path where your 'case_names' are. E.g. 'data/'
    'RESULTS_PATH': 'data/',  # Where to save the training results. E.g. 'data/'
    'VALIDATION_PATH': 'validation_data/',  # Where your validation images are stored. E.g. 'validation_data/'
    'IMAGE_SIZE': !!python/tuple [256, 256],  # Only height and width, (e.g. (256, 256) ) Channels are defied by 'GREY_OR_COLOR'
    'GREY_OR_COLOR': 'grey'  # Either 'grey' (8bit 1 channel) or 'color' (8bit 3 channel). Raises Exception if wrong
}